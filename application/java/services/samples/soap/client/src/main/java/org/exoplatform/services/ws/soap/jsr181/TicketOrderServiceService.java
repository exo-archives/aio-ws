
/*
 * 
 */

package org.exoplatform.services.ws.soap.jsr181;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.2
 * Wed Oct 22 10:22:32 EEST 2008
 * Generated source version: 2.1.2
 * 
 */


@WebServiceClient(name = "TicketOrderServiceService", 
                  wsdlLocation = "file:/home/andrew/exo/projects/ws/trunk/application/java/services/samples/soap/jsr181/target/generated/wsdl/TicketOrderService.wsdl",
                  targetNamespace = "http://jsr181.soap.ws.services.exoplatform.org/") 
public class TicketOrderServiceService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://jsr181.soap.ws.services.exoplatform.org/", "TicketOrderServiceService");
    public final static QName TicketOrderServicePort = new QName("http://jsr181.soap.ws.services.exoplatform.org/", "TicketOrderServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/andrew/exo/projects/ws/trunk/application/java/services/samples/soap/jsr181/target/generated/wsdl/TicketOrderService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/andrew/exo/projects/ws/trunk/application/java/services/samples/soap/jsr181/target/generated/wsdl/TicketOrderService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public TicketOrderServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TicketOrderServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TicketOrderServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns TicketOrderService
     */
    @WebEndpoint(name = "TicketOrderServicePort")
    public TicketOrderService getTicketOrderServicePort() {
        return super.getPort(TicketOrderServicePort, TicketOrderService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TicketOrderService
     */
    @WebEndpoint(name = "TicketOrderServicePort")
    public TicketOrderService getTicketOrderServicePort(WebServiceFeature... features) {
        return super.getPort(TicketOrderServicePort, TicketOrderService.class, features);
    }

}
