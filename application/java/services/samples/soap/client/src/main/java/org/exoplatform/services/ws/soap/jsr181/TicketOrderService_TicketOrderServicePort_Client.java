
package org.exoplatform.services.ws.soap.jsr181;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.2
 * Wed Oct 22 10:22:32 EEST 2008
 * Generated source version: 2.1.2
 * 
 */

public final class TicketOrderService_TicketOrderServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://jsr181.soap.ws.services.exoplatform.org/", "TicketOrderServiceService");

    private TicketOrderService_TicketOrderServicePort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = TicketOrderServiceService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        TicketOrderServiceService ss = new TicketOrderServiceService(wsdlURL, SERVICE_NAME);
        TicketOrderService port = ss.getTicketOrderServicePort();  
        
        {
        System.out.println("Invoking getTicket...");
        java.lang.String _getTicket_arg0 = "Kyiv";
        java.lang.String _getTicket_arg1 = "London";
        javax.xml.datatype.XMLGregorianCalendar _getTicket_arg2 = null;
        java.lang.String _getTicket_arg3 = "John Smith";
        java.lang.String _getTicket__return = port.getTicket(_getTicket_arg0, _getTicket_arg1, _getTicket_arg2, _getTicket_arg3);
        System.out.println("getTicket.result=" + _getTicket__return);


        }
        {
        System.out.println("Invoking confirmation...");
        boolean _confirmation_arg0 = true;
        port.confirmation(_confirmation_arg0);


        }

        System.exit(0);
    }

}
