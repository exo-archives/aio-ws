<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.exoplatform</groupId>
    <artifactId>parent</artifactId>
    <version>1.1.1</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.exoplatform.ws</groupId>
  <artifactId>config</artifactId>
  <name>eXo WS Config</name>
  <version>2.0.1</version>
  <packaging>pom</packaging>

  <properties>
    <exo.product.name>exo-ws</exo.product.name>
    <exo.product.specification>2.0</exo.product.specification>
  </properties>

  <scm>
    <connection>scm:svn:http://svn.exoplatform.org/svnroot/exoplatform/projects/ws/tags/2.0.1</connection>
    <developerConnection>scm:svn:http://svn.exoplatform.org/svnroot/exoplatform/projects/ws/tags/2.0.1</developerConnection>
    <url>http://fisheye.exoplatform.org/browse/projects-ws/tags/2.0.1</url>
  </scm>
 
  <modules>
    <module>commons</module>
    <module>frameworks/json</module>
    <module>frameworks/servlet</module>
    <module>frameworks/cometd</module>
    <module>rest/core</module>
    <module>rest/ext</module>
    <module>rest/ejb/connector2_1/modules/connector</module>
    <module>rest/ejb/connector2_1/modules/client</module>
    <module>rest/ejb/connector2_1</module>
    <module>rest/ejb/connector3_0/modules/connector</module>
    <module>rest/ejb/connector3_0/modules/client</module>
    <module>rest/ejb/connector3_0</module>
    <module>soap/jsr181</module>
    <module>security/oauth/consumer</module>
    <module>security/oauth/provider/service</module>
    <module>security/oauth/provider/webapp</module>
    <module>security/cas/server</module>
    <module>security/cas/client</module>
    <module>security/spnego/core</module>
    <module>security/spnego/tomcat</module>
    <module>application/config</module>
    <module>application/java/web/samples</module>
    <module>application/java/services/samples/rest/services</module>
    <module>application/java/services/samples/soap/jsr181</module>
    <module>application/java/services/samples/soap/client</module>
  </modules>
  <dependencies>
    <dependency>
      <groupId>emma</groupId>
      <artifactId>emma</artifactId>
      <version>2.0.5312</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.xsl</include>
          <include>**/*.xsd</include>
          <include>**/*.properties</include>
          <include>**/*.ion</include>
          <include>**/*.conf</include>
          <include>**/*.config</include>
          <include>**/*.groovy</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.xsl</include>
          <include>**/*.xsd</include>
          <include>**/*.properties</include>
          <include>**/login.conf</include>
          <include>**/*.ion</include>
          <include>**/*.conf</include>
          <include>**/*.config</include>
          <include>**/*.groovy</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.xsl</include>
          <include>**/*.xsd</include>
          <include>**/*.txt</include>
          <include>**/*.conf</include>
          <include>**/*.config</include>
          <include>**/*.groovy</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.xsl</include>
          <include>**/*.xsd</include>
          <include>**/*.txt</include>
          <include>**/*.conf</include>
          <include>**/*.config</include>
          <include>**/*.groovy</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>${exo.test.skip}</skip>
          <useFile>${exo.test.use.file}</useFile>
          <forkMode>once</forkMode><!-- once , pertest -->
          <testFailureIgnore>${exo.test.failure.ignore}</testFailureIgnore>
          <classesDirectory>${exo.test.classesdirectory}</classesDirectory>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <systemProperties>
            <property>
              <name>emma.coverage.out.file</name>
              <value>target/emma/coverage.ec</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <id>emma1</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks if="emma.run">
                <echo message="[EMMA] Start classes instrumentation ..." />
                <taskdef resource="emma_ant.properties" classpathref="maven.dependency.classpath" />
                <mkdir dir="target" />
                <mkdir dir="target/classes" />
                <mkdir dir="target/emma/classes" />
                <!-- Do nothing if the directory already exist -->
                <copy todir="target/emma/classes" verbose="false" overwrite="true">
                  <fileset dir="target/classes" />
                </copy>
                <emma enabled="true">
                  <instr mode="overwrite" metadatafile="target/emma/metadata.em">
                    <filter excludes="*.xml.*" />
                    <filter excludes="*JiBX*" />
                    <instrpath>
                      <dirset dir="target">
                        <include name="emma/classes" />
                      </dirset>
                    </instrpath>
                  </instr>
                </emma>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>emma2</id>
            <phase>test</phase>
            <configuration>
              <tasks if="emma.run">
                <echo message="[EMMA] Start report generation..." />
                <taskdef resource="emma_ant.properties" classpathref="maven.dependency.classpath" />
                <emma enabled="true">
<!--                   merged file will be rewritted by last project -->
                  <merge outfile="${exo.projects.directory.src}/ws/tags/2.0.1/target/coverage.es">
                    <fileset dir="${exo.projects.directory.src}/ws/tags/2.0.1/">
                      <include name="**/target/emma/*.e*" />
                      <include name="**/target/emma/*.e*" />
                    </fileset>
<!--                     just for the first launnch -->
                    <fileset file="${exo.projects.directory.config}/coverage.es" />
                  </merge>
                  <report>
                    <sourcepath>
                      <dirset dir="${exo.projects.directory.src}/ws/tags/2.0.1/">
                        <include name="**/src/**/java" />
                      </dirset>
                    </sourcepath>
                    <fileset dir="${exo.projects.directory.src}/ws/tags/2.0.1/target/">
                      <include name="*.es" />
                    </fileset>
                    <html outfile="${exo.projects.directory.src}/ws/tags/2.0.1/target/coverage.html" />
                    <xml outfile="${exo.projects.directory.src}/ws/tags/2.0.1/coverage.xml" />
                  </report>
                </emma>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>emma</groupId>
            <artifactId>emma</artifactId>
            <version>2.0.5312</version>
            <scope>test</scope>
          </dependency>
          <dependency>
            <groupId>emma</groupId>
            <artifactId>emma_ant</artifactId>
            <version>2.0.5312</version>
            <scope>test</scope>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${exo.projects.directory.config}/exo-checkstyle-checker.xml</configLocation>
          <suppressionsLocation>${exo.projects.directory.config}/exo-checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <aggregate>true</aggregate>
          <reportOutputDirectory>target/javadoc</reportOutputDirectory>
          <maxmemory>512m</maxmemory>
          <minmemory>256m</minmemory>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <property>
          <name>default</name>
        </property>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <org.exoplatform.kernel.version>2.1.1</org.exoplatform.kernel.version>
        <org.exoplatform.core.version>2.2.1</org.exoplatform.core.version>
      </properties>
    </profile>
  </profiles>
</project>