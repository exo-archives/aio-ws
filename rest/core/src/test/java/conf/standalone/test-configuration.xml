<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>
  <component>
    <key>org.exoplatform.services.log.LogConfigurationInitializer</key>
    <type>org.exoplatform.services.log.LogConfigurationInitializer</type>
    <init-params>
      <value-param>
        <name>logger</name>
        <value>org.exoplatform.services.log.impl.BufferedLog4JLogger</value>
      </value-param>
      <value-param>
        <name>configurator</name>
        <value>org.exoplatform.services.log.impl.Log4JConfigurator</value>
      </value-param>
      <properties-param>
        <name>properties</name>
        <description>Log4J properties</description>
<!--        <property name="log4j.rootLogger" value="DEBUG, stdout" />-->
        <property name="log4j.rootLogger" value="INFO, stdout" />

        <property name="log4j.appender.stdout" value="org.apache.log4j.ConsoleAppender" />
        <property name="log4j.appender.stdout.threshold" value="INFO, ERROR" />

        <property name="log4j.appender.stdout.layout" value="org.apache.log4j.PatternLayout" />
        <property name="log4j.appender.stdout.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
      </properties-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.RequestHandlerImpl</type>
  </component>
  <component>
    <type>org.exoplatform.services.rest.impl.RequestDispatcher</type>
  </component>
  <component>
    <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>
  <component>
    <type>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</type>
  </component>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</target-component>
    <component-plugin>
      <name>ws.rs.jaxb.context</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.provider.JAXBContextComponentPlugin</type>
      <init-params>
      <!-- ======== example ======= -->
        <value-param>
          <name>book</name>
          <value>org.exoplatform.services.rest.generated.Book</value>
        </value-param>
      <!-- ======================== -->
      <value-param>
        <name>wadl.application</name>
        <value>org.exoplatform.services.rest.wadl.research.Application</value>
      </value-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>
  <external-component-plugins>
    <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
    <component-plugin>
      <name>ws.rs.entity.provider</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.provider.EntityProviderComponentPlugin</type>
      <!-- NOTE it is just example of configuration. -->
      <!-- StringEntityProvider is part of REST framework, not needs to add it from configuration --> 
      <!--
      <init-params>
        <value-param>
          <name>strings</name>
          <value>org.exoplatform.services.rest.impl.provider.StringEntityProvider</value>
        </value-param>
      </init-params>
      -->
    </component-plugin>
    <component-plugin>
      <name>ws.rs.method.filter</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin</type>
      <!--
      <init-params>
        <value-param>
          <name>name</name>
          <value>filter class</value>
        </value-param>
      </init-params>
      -->
    </component-plugin>
    <component-plugin>
      <name>ws.rs.request.filter</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.RequestFilterComponentPlugin</type>
      <!--
      <init-params>
        <value-param>
          <name>name</name>
          <value>filter class</value>
        </value-param>
      </init-params>
      -->
    </component-plugin>
    <component-plugin>
      <name>ws.rs.response.filter</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.ResponseFilterComponentPlugin</type>
      <!--
      <init-params>
        <value-param>
          <name>name</name>
          <value>filter class</value>
        </value-param>
      </init-params>
      -->
    </component-plugin>
  </external-component-plugins>
</configuration>
